@using FantasyFootballStatTracker.Models
@{
    ViewData["Title"] = "Start Draft - Week " + ViewData["Week"];
    var draftState = (DraftState)ViewData["DraftState"];
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Start Week @ViewData["Week"] Draft</h3>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <h4>Welcome to the Fantasy Football Draft!</h4>
                        <p class="text-muted">Select which team gets the first pick, then you'll alternate picks until both rosters are complete.</p>
                    </div>

                    <div class="draft-rules mb-4">
                        <h5>Draft Rules:</h5>
                        <ul class="list-unstyled">
                            <li><i class="fas fa-check text-success"></i> <strong>18 total picks</strong> (9 players per team)</li>
                            <li><i class="fas fa-check text-success"></i> <strong>Snake draft format</strong> (alternating picks each round)</li>
                            <li><i class="fas fa-check text-success"></i> <strong>Required positions:</strong> 1 QB, 2 RB, 2 WR, 1 TE, 1 K, 1 DEF, 1 FLEX</li>
                            <li><i class="fas fa-check text-success"></i> <strong>FLEX position</strong> can be RB, WR, or TE</li>
                        </ul>
                    </div>

                    <form asp-action="StartDraft" method="post" class="text-center">
                        <input type="hidden" name="week" value="@ViewData["Week"]" />
                        
                        <div class="mb-4">
                            <h5>Who gets the first pick?</h5>
                            <div class="btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-outline-primary btn-lg mx-2">
                                    <input type="radio" name="firstPickOwnerId" value="1" id="team1" required />
                                    <i class="fas fa-users"></i> @Html.Raw(draftState.GetOwnerName(1))
                                </label>
                                <label class="btn btn-outline-primary btn-lg mx-2">
                                    <input type="radio" name="firstPickOwnerId" value="2" id="team2" required />
                                    <i class="fas fa-users"></i> @Html.Raw(draftState.GetOwnerName(2))
                                </label>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="fas fa-play"></i> Start Draft
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.draft-order li {
    padding: 0.25rem 0;
}

.draft-rules i {
    margin-right: 0.5rem;
}

.btn-group-toggle .btn {
    margin: 0.5rem;
}

.btn-group-toggle input[type="radio"] {
    display: none;
}

.btn-group-toggle input[type="radio"]:checked + i {
    background-color: var(--bs-primary);
}
</style>

<script>
// Handle radio button styling
document.addEventListener('DOMContentLoaded', function() {
    const radioButtons = document.querySelectorAll('input[name="firstPickOwnerId"]');
    const labels = document.querySelectorAll('.btn-group-toggle .btn');
    
    radioButtons.forEach(radio => {
        radio.addEventListener('change', function() {
            labels.forEach(label => {
                label.classList.remove('active');
                label.classList.add('btn-outline-primary');
                label.classList.remove('btn-primary');
            });
            
            if (this.checked) {
                const label = this.parentElement;
                label.classList.add('active');
                label.classList.remove('btn-outline-primary');
                label.classList.add('btn-primary');
            }
        });
    });
});
</script>