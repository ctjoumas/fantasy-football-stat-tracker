@model List<Team>

@{
    ViewData["Title"] = "Scoreboard";
}

@functions {
    /// <summary>
    /// Abbreviates player names to "First Initial. Last Name" format and shortens defense names to mascot only
    /// Examples: "Justin Jefferson" -> "J. Jefferson", "Los Angeles Rams" -> "Rams"
    /// </summary>
    /// <param name="playerName">The full player or defense name</param>
    /// <param name="position">The player's position</param>
    /// <returns>Abbreviated name</returns>
    private string AbbreviatePlayerName(string playerName, Position position)
    {
        if (string.IsNullOrEmpty(playerName))
            return string.Empty;

        if (position == Position.DEF)
        {
            // For defenses, extract just the mascot (last word)
            // "Los Angeles Rams" -> "Rams", "New England Patriots" -> "Patriots"
            var words = playerName.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);
            return words.Length > 0 ? words[words.Length - 1] : playerName;
        }
        else
        {
            // For regular players, convert to "First Initial. Last Name"
            // "Justin Jefferson" -> "J. Jefferson"
            var nameParts = playerName.Trim().Split(' ', StringSplitOptions.RemoveEmptyEntries);
            
            if (nameParts.Length >= 2)
            {
                // Get first initial and last name
                string firstInitial = nameParts[0].Substring(0, 1).ToUpper();
                string lastName = nameParts[nameParts.Length - 1];
                return $"{firstInitial}. {lastName}";
            }
            else
            {
                // If name doesn't have expected format, return as-is
                return playerName;
            }
        }
    }
}

<div class="scoreboard-container">
    <!-- Main Scoreboard Card Container -->
    <div class="scoreboard-main-card">
        <!-- Week Selection Header -->
        <div class="scoreboard-header">
            <div class="row justify-content-center">
                <div class="col-12 col-md-6">
                    <div class="week-selection-container">
                        <label class="week-selection-label">Select Week</label>
                        <form asp-controller="Scoreboard" asp-action="Index" method="post">
                            <select name="week" class="form-control" asp-items="@ViewBag.weeks" onchange="this.form.submit();"></select>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Unified Team Summary Header -->
        <div class="team-summary-section">
            <div class="unified-team-header">
                <!-- Team 1 -->
                <div class="team-summary-item">
                    @if (Model.Count > 0)
                    {
                        var team1 = Model[0];
                        byte[] bytes1 = (byte[])team1.OwnerLogo;
                        string base64String1 = Convert.ToBase64String(bytes1, 0, bytes1.Length);
                        var logoSource1 = "data:image/png;base64," + base64String1;
                        var totalTeamPoints1 = team1.TotalFantasyPoints.ToString("0.00");
                        
                        <img class="team-summary-logo" src="@logoSource1" alt="Team Logo" />
                        <div class="team-summary-score">@totalTeamPoints1</div>
                    }
                </div>

                <!-- VS Divider -->
                <div class="vs-divider">VS</div>

                <!-- Team 2 -->
                <div class="team-summary-item">
                    @if (Model.Count > 1)
                    {
                        var team2 = Model[1];
                        byte[] bytes2 = (byte[])team2.OwnerLogo;
                        string base64String2 = Convert.ToBase64String(bytes2, 0, bytes2.Length);
                        var logoSource2 = "data:image/png;base64," + base64String2;
                        var totalTeamPoints2 = team2.TotalFantasyPoints.ToString("0.00");
                        
                        <img class="team-summary-logo" src="@logoSource2" alt="Team Logo" />
                        <div class="team-summary-score">@totalTeamPoints2</div>
                    }
                </div>
            </div>
        </div>

        <!-- Main Scoreboard Content -->
        <div class="scoreboard-content">
            <div class="row no-gutters">
                <!-- Team 1 Players -->
                <div class="col-5">
                    @if (Model.Count > 0)
                    {
                        var team = Model[0];
                        <div class="team-players-section">
                            <!-- Players List -->
                            @if (team.Players.Count == 0)
                            {
                                <div class="select-team-link">
                                    <div class="text-muted">
                                        <i class="fas fa-hourglass-half"></i> Waiting for draft to begin...
                                    </div>
                                </div>
                            }
                            else
                            {
                                @foreach (var player in team.Players)
                                {
                                    var matchupDisplay = "";
                                    var day = player.GameTime.DayOfWeek.ToString().Substring(0, 3);
                                    var hour = Convert.ToInt32(player.GameTime.ToString("hh"));
                                    var minute = player.GameTime.ToString("mm");
                                    var pmOrAm = player.GameTime.ToString("tt", System.Globalization.CultureInfo.InvariantCulture);
                                    var opponentAbbreviation = player.OpponentAbbreviation.ToUpper();
                                    var gameLocation = player.HomeOrAway.Equals("home") ? "vs" : "@";

                                    if (player.GameEnded)
                                    {
                                        matchupDisplay = "Final " + player.FinalScoreString + " " + gameLocation + " " + opponentAbbreviation;
                                    }
                                    else if (player.GameCanceled)
                                    {
                                        matchupDisplay = "Canceled";
                                    }
                                    else if (player.GameInProgress)
                                    {
                                        matchupDisplay = player.TimeRemaining + " " + player.CurrentScoreString + " " + gameLocation + " " + opponentAbbreviation;
                                    }
                                    else
                                    {
                                        matchupDisplay = day + " " + hour + ":" + minute + pmOrAm + " " + gameLocation + " " + opponentAbbreviation;
                                    }

                                    <div class="player-row @(player.GameInProgress ? "in-progress" : "")">
                                        <img class="player-headshot" src="@Html.DisplayFor(modelItem => player.Headshot)" alt="Player headshot" />
                                        
                                        <div class="player-info">
                                            <div class="player-name">@AbbreviatePlayerName(player.Name, player.TruePosition)</div>
                                            <div class="player-details">
                                                @player.TeamAbbreviation.ToUpper() - @player.TruePosition<br />
                                                <span class="mobile-hide-details">
                                                    @if (player.GameCanceled)
                                                    {
                                                        <span style="color:#FF7F7F">@matchupDisplay</span>
                                                    }
                                                    else
                                                    {
                                                        @matchupDisplay
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                        
                                        <div class="player-points @(player.GameInProgress ? "in-progress" : "")">
                                            @{
                                                var playerPoints = player.Points.ToString("0.00");
                                                if (!player.GameEnded && !player.GameCanceled && !player.GameInProgress)
                                                {
                                                    playerPoints = "-";
                                                }
                                            }
                                            @playerPoints
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>

                <!-- Position Labels Column -->
                <div class="col-2">
                    <div class="position-labels-section">
                        @{
                            string[] positions = { "QB", "RB", "RB", "WR", "WR", "FLEX", "TE", "K", "DEF" };
                        }
                        @for (int i = 0; i < 9; i++)
                        {
                            <div class="position-column">
                                @positions[i]
                            </div>
                        }
                    </div>
                </div>

                <!-- Team 2 Players -->
                <div class="col-5">
                    @if (Model.Count > 1)
                    {
                        var team = Model[1];
                        <div class="team-players-section">
                            <!-- Players List -->
                            @if (team.Players.Count == 0)
                            {
                                <div class="select-team-link">
                                    <div class="text-muted">
                                        <i class="fas fa-hourglass-half"></i> Waiting for draft to begin...
                                    </div>
                                </div>
                            }
                            else
                            {
                                @foreach (var player in team.Players)
                                {
                                    var matchupDisplay = "";
                                    var day = player.GameTime.DayOfWeek.ToString().Substring(0, 3);
                                    var hour = Convert.ToInt32(player.GameTime.ToString("hh"));
                                    var minute = player.GameTime.ToString("mm");
                                    var pmOrAm = player.GameTime.ToString("tt", System.Globalization.CultureInfo.InvariantCulture);
                                    var opponentAbbreviation = player.OpponentAbbreviation.ToUpper();
                                    var gameLocation = player.HomeOrAway.Equals("home") ? "vs" : "@";

                                    if (player.GameEnded)
                                    {
                                        matchupDisplay = "Final " + player.FinalScoreString + " " + gameLocation + " " + opponentAbbreviation;
                                    }
                                    else if (player.GameCanceled)
                                    {
                                        matchupDisplay = "Canceled";
                                    }
                                    else if (player.GameInProgress)
                                    {
                                        matchupDisplay = player.TimeRemaining + " " + player.CurrentScoreString + " " + gameLocation + " " + opponentAbbreviation;
                                    }
                                    else
                                    {
                                        matchupDisplay = day + " " + hour + ":" + minute + pmOrAm + " " + gameLocation + " " + opponentAbbreviation;
                                    }

                                    <div class="player-row @(player.GameInProgress ? "in-progress" : "")">
                                        <img class="player-headshot" src="@Html.DisplayFor(modelItem => player.Headshot)" alt="Player headshot" />
                                        
                                        <div class="player-info">
                                            <div class="player-name">@AbbreviatePlayerName(player.Name, player.TruePosition)</div>
                                            <div class="player-details">
                                                @player.TeamAbbreviation.ToUpper() - @player.TruePosition<br />
                                                <span class="mobile-hide-details">
                                                    @if (player.GameCanceled)
                                                    {
                                                        <span style="color:#FF7F7F">@matchupDisplay</span>
                                                    }
                                                    else
                                                    {
                                                        @matchupDisplay
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                        
                                        <div class="player-points @(player.GameInProgress ? "in-progress" : "")">
                                            @{
                                                var playerPoints = player.Points.ToString("0.00");
                                                if (!player.GameEnded && !player.GameCanceled && !player.GameInProgress)
                                                {
                                                    playerPoints = "-";
                                                }
                                            }
                                            @playerPoints
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        @* Replace the draft overlay section with this *@
        @if (Model != null && Model.Count >= 2 && Model[0].Players.Count == 0 && Model[1].Players.Count == 0)
        {
            <div class="draft-prompt-container">
                <div class="draft-prompt-card">
                    <div class="card-header text-center bg-primary text-white">
                        <h4><i class="fas fa-trophy"></i> Week @Model[0].Week Draft Ready</h4>
                    </div>
                    <div class="card-body text-center">
                        <div class="draft-illustration mb-3">
                            <i class="fas fa-users" style="font-size: 3rem; color: #007bff;"></i>
                        </div>
                        <h5>Time to Draft Your Teams!</h5>
                        <p class="text-muted">Select your lineup for Week @Model[0].Week and compete for victory.</p>
                        <a href="/Draft/Start?week=@Model[0].Week" class="btn btn-success btn-lg">
                            <i class="fas fa-play"></i> Draft
                        </a>
                    </div>
                </div>
            </div>

            <style>
                .draft-prompt-container {
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    z-index: 10;
                    width: 90%;
                    max-width: 450px;
                }

                .draft-prompt-card {
                    background: white;
                    border-radius: 15px;
                    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
                    border: 3px solid #007bff;
                }

                    .draft-prompt-card .card-header {
                        border-radius: 12px 12px 0 0;
                        padding: 1.5rem;
                    }

                    .draft-prompt-card .card-body {
                        padding: 2rem;
                    }

                .draft-illustration {
                    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
                    border-radius: 50%;
                    width: 80px;
                    height: 80px;
                    margin: 0 auto;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
            </style>
        }
    </div>
</div>